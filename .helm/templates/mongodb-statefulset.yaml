---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Chart.Name }}-mongodb
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-mongodb
  template:
    metadata:
      labels:
        app: {{.Chart.Name }}-mongodb
    spec:
      imagePullSecrets:
      - name: registry-secret
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: mongo-init
        image: {{ .Values.werf.image.mongodb }}
        command: ["/bin/sh", "/tmp/init-script.sh"]
        volumeMounts:
        - name: {{ .Chart.Name }}-mongodb-init
          mountPath: /tmp/init-script.sh
          subPath: init-script.sh
        - name: mongo-persistent-storage
          mountPath: /data/db
        env:
        - name: INIT_DB
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_DB | first | default .Values.mongodb.env.INIT_DB._default }}
        - name: INIT_USER_NAME
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_USER_NAME | first | default .Values.mongodb.env.INIT_USER_NAME._default }}
        - name: INIT_USER_EMAIL
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_USER_EMAIL | first | default .Values.mongodb.env.INIT_USER_EMAIL._default }}
        - name: INIT_PASSWORD
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_PASSWORD | first | default .Values.mongodb.env.INIT_PASSWORD._default }}
      containers:
      - name: mongo
        image: {{ .Values.werf.image.mongodb }}
        command:
        - mongod
        - "--bind_ip_all"
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
      volumes:
      - name: {{ .Chart.Name }}-mongodb-init
        configMap:
          name: {{ .Chart.Name }}-mongodb-init
          defaultMode: 0777
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Chart.Name }}-mongodb
  labels:
    app: {{.Chart.Name }}-mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: {{.Chart.Name }}-mongodb
