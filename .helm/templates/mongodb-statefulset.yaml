---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Chart.Name }}-mongodb
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-mongodb
  template:
    metadata:
      labels:
        app: {{.Chart.Name }}-mongodb
    spec:
      imagePullSecrets:
      - name: registry-secret
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: mongo-init
        image: {{ .Values.werf.image.mongodb }}
        command: ["/bin/sh", "/tmp/init-script.sh"]
        volumeMounts:
        - name: {{ .Chart.Name }}-mongodb-init
          mountPath: /tmp/init-script.sh
          subPath: init-script.sh
        - name: mongo-persistent-storage
          mountPath: /data/db
        env:
        - name: INIT_DB
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_DB | first | default .Values.mongodb.env.INIT_DB._default }}
        - name: INIT_USER_NAME
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_USER_NAME | first | default .Values.mongodb.env.INIT_USER_NAME._default }}
        - name: INIT_USER_EMAIL
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_USER_EMAIL | first | default .Values.mongodb.env.INIT_USER_EMAIL._default }}
        - name: INIT_PASSWORD
          value: {{ pluck .Values.werf.env .Values.mongodb.env.INIT_PASSWORD | first | default .Values.mongodb.env.INIT_PASSWORD._default }}
      containers:
      - name: mongo
        image: {{ .Values.werf.image.mongodb }}
        command:
        - mongod
        - "--bind_ip_all"
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
      volumes:
      - name: {{ .Chart.Name }}-mongodb-init
        configMap:
          name: {{ .Chart.Name }}-mongodb-init
          defaultMode: 0777
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Chart.Name }}-mongodb
  labels:
    app: {{.Chart.Name }}-mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: {{.Chart.Name }}-mongodb


---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{.Chart.Name }}-mongodb-backup-cronjob
spec:
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
          - name: registry-secret
          containers:
            - name: backup
              image: {{ .Values.werf.image.mongodb }}
              command:
                - /bin/sh
                - -c
                - |
                  set -x
                  FILENAME="$MONGO_DATABASE-$MONGO_COLLECTION-backup-$(date +%Y-%m-%dT%H:%M:%S).gz"
                  EXPIRY_DATE=$(date -d "+1 days" +"%Y-%m-%dT%H:%M:%S")
                  echo "Using filename: $FILENAME"
                  mongodump --uri=$MONGO_URI --db=$MONGO_DATABASE --collection=$MONGO_COLLECTION --gzip --archive=$BACKUP_PATH/$FILENAME && \
                  s3cmd put --expiry-date="$EXPIRY_DATE" $BACKUP_PATH/$FILENAME $S3_BUCKET/$FILENAME && \
                  rm $BACKUP_PATH/$FILENAME
              env:
                - name: MONGO_URI
                  value: "mongodb://{{.Chart.Name }}-mongodb:27017"
                - name: MONGO_DATABASE
                  value: "tenis"
                - name: MONGO_COLLECTION
                  value: "history"
                - name: BACKUP_PATH
                  value: "/tmp/mongodb_backup"
                - name: S3_BUCKET
                  value: "s3://mongodb-backups"
              volumeMounts:
                - name: backup-storage
                  mountPath: /tmp/mongodb_backup
                - name: s3cfg-volume
                  mountPath: /data/db/.s3cfg
                  subPath: .s3cfg
          restartPolicy: OnFailure
          volumes:
            - name: backup-storage
              emptyDir: {}
            - name: s3cfg-volume
              configMap:
                name: {{ .Chart.Name }}-mongodb-init
